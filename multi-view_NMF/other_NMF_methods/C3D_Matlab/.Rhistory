#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
#x=readMat('sn_500cells//vx_lambda.mat');
x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
candidate.modules=list()
for(i in 1:ncol(V)){
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
getwd()
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
#x=readMat('sn_500cells//vx_lambda.mat');
x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
V[,1]
V[,2]
candidate.modules=list()
for(i in 1:ncol(V)){
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
i=1
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
candidate.modules=list()
for(i in 1:ncol(V)){
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
i
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
V[,i]
hist(V[,i])
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
hist(V[,i])
hist(V[,1])
hist(V[,2])
hist(V[,3])
hist(V[,4])
r<-tryCatch(
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)
error=function(c)'error')
r
r<-tryCatch(
fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE),
error=function(c)'error')
r
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
r
candidate.modules=list()
for(i in 1:ncol(V)){
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
if(r=='error'){
cat('failed')
next
}
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
length(candidate.modules)
sapply(candidate.modules,length)
id=rep(1:length(candidate.modules),
sapply(candidate.modules,length))
df=data.frame(id=id,gene=unlist(candidate.modules))
#writeMat("sc_male_candi.modules.mat",module.df=df)
#writeMat("sc_female_candi.modules.mat",module.df=df)
#writeMat("sn_candidateModules.mat",module.df=df)
#writeMat("sn_female_candi.modules.mat",module.df=df)
writeMat("sc_500cells_modules",module.df=df)
getwd()
#df=readRDS('../brain_scRNA-seq/all_common_genes.rds')
#genes=df$common.genes
#length(genes)
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
x=readMat('sn_500cells//vx_lambda.mat');
#x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
candidate.modules=list()
for(i in 1:ncol(V)){
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
if(r=='error'){
cat('failed')
next
}
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
length(candidate.modules)
sapply(candidate.modules,length)
id=rep(1:length(candidate.modules),
sapply(candidate.modules,length))
df=data.frame(id=id,gene=unlist(candidate.modules))
#writeMat("sc_male_candi.modules.mat",module.df=df)
#writeMat("sc_female_candi.modules.mat",module.df=df)
#writeMat("sn_candidateModules.mat",module.df=df)
writeMat("sn_female_modules.mat",module.df=df)
#writeMat("sc_500cells_modules",module.df=df)
#df=readRDS('../brain_scRNA-seq/all_common_genes.rds')
#genes=df$common.genes
#length(genes)
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
x=readMat('sn_500cells//vx_lambda.mat');
#x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
candidate.modules=list()
for(i in 1:ncol(V)){
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
if(r=='error'){
cat('failed')
next
}
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
length(candidate.modules)
sapply(candidate.modules,length)
id=rep(1:length(candidate.modules),
sapply(candidate.modules,length))
df=data.frame(id=id,gene=unlist(candidate.modules))
#writeMat("sc_male_candi.modules.mat",module.df=df)
#writeMat("sc_female_candi.modules.mat",module.df=df)
#writeMat("sn_candidateModules.mat",module.df=df)
writeMat("sn_500cells_modules.mat",module.df=df)
#writeMat("sc_500cells_modules",module.df=df)
setwd("~/Documents/brain_core")
#genes=readRDS('brain_scRNA-seq/all_common_genes.rds')
genes=readRDS('brain_snRNA-seq/all_common_genes.rds')
names(genes)
common.genes=genes$common.genes
length(common.genes)
library(R.matlab)
#x=readMat('./C3D_Matlab/sc_C3D_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_out.mat') #strength,information
x=readMat('./C3D_Matlab/sn_500cells_modules.fdr.mat')
names(x)
cell.types=unlist(x$filenames)
dim(x$FDR2) #module by cell.type
#dim(x$Hc)
length(x$modulesFinal)
x$modulesFinal[[1]]
sapply(x$modulesFinal,function(i)nrow(i[[1]]))
dim(x$pvalues.modulePerNet) #module by cell.types
dim(x$FDR2) #module by cell.types
i=apply(x$FDR2,1,function(i) sum(i<0.05))
max(i)
sum(i==ncol(x$FDR2)) #12 module common to all
sum(i>=ncol(x$FDR2)*0.9) #12 module common to all
sum(i>=ncol(x$FDR2)*0.8) #12 module common to all
sum(i!=0) #28
common.modules=x$modulesFinal[i==ncol(x$FDR2)]
#common.modules=x$modulesFinal[i>=1 ]
#common.modules=x$modulesFinal[i>=ncol(x$FDR2)*0.8 ]
length(common.modules)
setwd("~/Documents/brain_core/brain_snRNA-seq")
setwd("~/Documents/brain_core/C3D_Matlab")
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
x=readMat('sn_500cells//vx_lambda.mat');
#x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
candidate.modules=list()
for(i in 1:ncol(V)){
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
if(r=='error'){
cat('failed')
next
}
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
sapply(candidate.modules,length)
setwd("~/Documents/brain_core")
#genes=readRDS('brain_scRNA-seq/all_common_genes.rds')
genes=readRDS('brain_snRNA-seq/all_common_genes.rds')
names(genes)
common.genes=genes$common.genes
length(common.genes)
library(R.matlab)
#x=readMat('./C3D_Matlab/sc_C3D_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_out.mat') #strength,information
x=readMat('./C3D_Matlab/sn_500cells_modules.fdr.mat')
#x=readMat('./C3D_Matlab/sc_500cells_modules.fdr.mat')
#x=readMat('./C3D_Matlab/sn_C3D_500.mat')
#x=readMat('./C3D_Matlab/sc_C3D_female_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sc_C3D_male_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_female_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_male_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_male_out_rep2.mat') #strength,information
names(x)
cell.types=unlist(x$filenames)
dim(x$FDR2) #module by cell.type
#dim(x$Hc)
length(x$modulesFinal)
x$modulesFinal[[1]]
sapply(x$modulesFinal,function(i)nrow(i[[1]]))
dim(x$pvalues.modulePerNet) #module by cell.types
dim(x$FDR2) #module by cell.types
i=apply(x$FDR2,1,function(i) sum(i<0.05))
max(i)
sum(i==ncol(x$FDR2)) #12 module common to all
sum(i>=ncol(x$FDR2)*0.9) #12 module common to all
sum(i>=ncol(x$FDR2)*0.8) #12 module common to all
sum(i!=0) #28
#common.modules=x$modulesFinal[i==ncol(x$FDR2)]
#common.modules=x$modulesFinal[i>=1 ]
common.modules=x$modulesFinal[i>=ncol(x$FDR2)*0.8 ]
length(common.modules)
#common.modules[[1]]
common.modules.genes=lapply(common.modules,function(i)
common.genes[unlist(i)])
sapply(common.modules.genes,length)
source('src_fly.gene_GOenrich.R')
GO.out=lapply(common.modules.genes,function(genes){
GOenrich(genes)
})
sapply(GO.out,nrow)
head(GO.out[[1]]$Description)
for(i in 1:length(GO.out)){
cat('module',i,'\n')
print(head(GO.out[[i]]$Description))
}
setwd("~/Documents/brain_core/C3D_Matlab")
#df=readRDS('../brain_scRNA-seq/all_common_genes.rds')
#genes=df$common.genes
#length(genes)
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
x=readMat('sn_1kcells/vx_lambda.mat');
#x=readMat('sn_500cells//vx_lambda.mat');
#x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
candidate.modules=list()
for(i in 1:ncol(V)){
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
if(r=='error'){
cat('failed')
next
}
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
length(candidate.modules)
sapply(candidate.modules,length)
id=rep(1:length(candidate.modules),
sapply(candidate.modules,length))
df=data.frame(id=id,gene=unlist(candidate.modules))
#writeMat("sc_male_candi.modules.mat",module.df=df)
#writeMat("sc_female_candi.modules.mat",module.df=df)
writeMat("sn_1kcells_modules.mat",module.df=df)
#writeMat("sn_500cells_modules.mat",module.df=df)
#writeMat("sc_500cells_modules",module.df=df)
#genes=readRDS('brain_scRNA-seq/all_common_genes.rds')
genes=readRDS('../brain_snRNA-seq/all_common_genes.rds')
names(genes)
common.genes=genes$common.genes
length(common.genes)
library(R.matlab)
#x=readMat('./C3D_Matlab/sc_C3D_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_out.mat') #strength,information
x=readMat('./sn_1kcells_modules.fdr.mat')
#x=readMat('./C3D_Matlab/sc_500cells_modules.fdr.mat')
#x=readMat('./C3D_Matlab/sn_C3D_500.mat')
#x=readMat('./C3D_Matlab/sc_C3D_female_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sc_C3D_male_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_female_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_male_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_male_out_rep2.mat') #strength,information
names(x)
cell.types=unlist(x$filenames)
dim(x$FDR2) #module by cell.type
#dim(x$Hc)
length(x$modulesFinal)
x$modulesFinal[[1]]
sapply(x$modulesFinal,function(i)nrow(i[[1]]))
dim(x$pvalues.modulePerNet) #module by cell.types
dim(x$FDR2) #module by cell.types
i=apply(x$FDR2,1,function(i) sum(i<0.05))
max(i)
#df=readRDS('../brain_scRNA-seq/all_common_genes.rds')
#genes=df$common.genes
#length(genes)
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#df=readRDS('../brain_scRNA-seq/all_common_genes.rds')
#genes=df$common.genes
#length(genes)
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
x=readMat('sn_500cells//vx_lambda.mat');
#x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
#df=readRDS('../brain_scRNA-seq/all_common_genes.rds')
#genes=df$common.genes
#length(genes)
cut=0.01;#qvalu<0.001
min.size=5; #size>min.size
library(R.matlab)
#x=readMat('sc_brain_58/vx_lambda.mat');
#x=readMat('sn_brain_100/vx_lambda.mat');
#x=readMat('sc_male_29/vx_lambda.mat');
#x=readMat('sc_female_29/vx_lambda.mat');
#x=readMat('sn_female_50/vx_lambda.mat');
#x=readMat('sn_male_50/vx_lambda.mat');
#x=readMat('sn_male_50_rep2/vx_lambda.mat');
#x=readMat('sn_1kcells/vx_lambda.mat');
x=readMat('sn_500cells//vx_lambda.mat');
#x=readMat('sc_500cells//vx_lambda.mat');
V=x$V
dim(V)
candidate.modules=list()
for(i in 1:ncol(V)){
r<-tryCatch(
{fdr.out=fdrtool::fdrtool(V[,i],statistic="normal",plot=FALSE)},
error=function(c)'error')
if(r=='error'){
cat('failed')
next
}
#plot(V[,i],fdr.out$qval)
qval_all=fdr.out$qval
#hist(qval_all)
if(sum(qval_all<cut)<min.size){next}
candidate.modules[[as.character(i)]]=which(qval_all<cut)
}
length(candidate.modules)
sapply(candidate.modules,length)
id=rep(1:length(candidate.modules),
sapply(candidate.modules,length))
df=data.frame(id=id,gene=unlist(candidate.modules))
#writeMat("sc_male_candi.modules.mat",module.df=df)
#writeMat("sc_female_candi.modules.mat",module.df=df)
#writeMat("sn_1kcells_modules.mat",module.df=df)
writeMat("sn_500cells_modules.mat",module.df=df)
#writeMat("sc_500cells_modules",module.df=df)
#genes=readRDS('brain_scRNA-seq/all_common_genes.rds')
genes=readRDS('../brain_snRNA-seq/all_common_genes.rds')
names(genes)
common.genes=genes$common.genes
length(common.genes)
library(R.matlab)
#x=readMat('./C3D_Matlab/sc_C3D_out.mat') #strength,information
#x=readMat('./C3D_Matlab/sn_C3D_out.mat') #strength,information
#x=readMat('./sn_1kcells_modules.fdr.mat')
x=readMat('./sn_500cells_modules.fdr.mat')
names(x)
cell.types=unlist(x$filenames)
dim(x$FDR2) #module by cell.type
#dim(x$Hc)
length(x$modulesFinal)
x$modulesFinal[[1]]
sapply(x$modulesFinal,function(i)nrow(i[[1]]))
dim(x$pvalues.modulePerNet) #module by cell.types
dim(x$FDR2) #module by cell.types
i=apply(x$FDR2,1,function(i) sum(i<0.05))
max(i)
sum(i==ncol(x$FDR2)) #12 module common to all
sum(i>=ncol(x$FDR2)*0.9) #12 module common to all
sum(i>=ncol(x$FDR2)*0.8) #12 module common to all
#common.modules=x$modulesFinal[i==ncol(x$FDR2)]
#common.modules=x$modulesFinal[i>=1 ]
common.modules=x$modulesFinal[i>=ncol(x$FDR2)*0.8 ]
length(common.modules)
#common.modules[[1]]
common.modules.genes=lapply(common.modules,function(i)
common.genes[unlist(i)])
sapply(common.modules.genes,length)
i=apply(x$FDR2,1,function(i) sum(i<0.05))
tmp=x$FDR2[i>0,]
tmp1=tmp;
tmp[tmp1<0.05]=1;
tmp[tmp1>=0.05]=0
dim(tmp)
colnames(tmp)=unlist(x$filenames)
pdf('test.pdf',useDingbats = T)
print(pheatmap::pheatmap(tmp, fontsize = 6))
dev.off()
## GO enrich
source('src_fly.gene_GOenrich.R')
GO.out=lapply(common.modules.genes,function(genes){
GOenrich(genes)
})
sapply(GO.out,nrow)
head(GO.out[[1]]$Description)
for(i in 1:length(GO.out)){
cat('module',i,'\n')
print(head(GO.out[[i]]$Description))
}
## GO enrich
source('src_fly.gene_GOenrich.R')
## GO enrich
source('../src_fly.gene_GOenrich.R')
source('../src_fly.gene_GOenrich.R')
GO.out=lapply(common.modules.genes,function(genes){
GOenrich(genes)
})
sapply(GO.out,nrow)
head(GO.out[[1]]$Description)
for(i in 1:length(GO.out)){
cat('module',i,'\n')
print(head(GO.out[[i]]$Description))
}
saveRDS(GO.out,'sn_500cells_moduleGO.rds')
