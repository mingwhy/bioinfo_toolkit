vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black"
)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=1,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*10
)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=1,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*100
)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=1,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*20
)
plot.mat
pdf('sn_module2_phototransduction.pdf',useDingbats = T)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=1,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*20
)
dev.off()
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=3,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*20
)
pdf('sn_module2_phototransduction.pdf',useDingbats = T)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=3,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*50
)
dev.off()
}
pdf('sn_module2_phototransduction.pdf',useDingbats = T)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=2.5,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*50
)
dev.off()
pdf('sn_module2_phototransduction.pdf',useDingbats = T)
plot(net,vertex.size=1,
#rescale=T,
#asp=0,
vertex.label.cex=2.5,
vertex.label.family="Helvetica",
vertex.label.font=2,
#vertex.label=t.names,
vertex.shape="circle",
vertex.size=2,
vertex.color="deepskyblue2",
vertex.label.color="black",
edge.width=E(net)$weight*50
)
dev.off()
setwd("~/Documents/brain_core_test/benchmark")
setwd("~/Documents/brain_core_test/draft.figures")
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
mat
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat=mat/100
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
pdf("fig1-node.selection.pdf",useDingbats = T)
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## module by cell type
N=400;M=5;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat1=apply(mat,2,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1]=0
x[x>=1]=1
x
})
print (pheatmap::pheatmap(mat1,col=c('grey90',"#99000D"),
treeheight_row = 0, treeheight_col = 0)
)
dev.off()
pdf("fig1-node.selection.pdf",useDingbats = T)
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## module by cell type
N=400;M=5;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat1=apply(mat,2,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1]=0
x[x>=1]=1
x
})
print (pheatmap::pheatmap(mat1,col=c('grey90',"#99000D"),
treeheight_row = 0, treeheight_col = 0)
)
dev.off()
mat=as.matrix(Matrix::Matrix(runif(0,10,N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
mat=as.matrix(Matrix::Matrix(runif(N*M,0,10),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
dev.off()
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M,0,10),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
mat=as.matrix(Matrix::Matrix(rexp(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## change to red color panel
pdf("fig1-node.selection.pdf",useDingbats = T)
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(rexp(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.2]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## module by cell type
N=400;M=5;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat1=apply(mat,2,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1]=0
x[x>=1]=1
x
})
print (pheatmap::pheatmap(mat1,col=c('grey90',"#99000D"),
treeheight_row = 0, treeheight_col = 0)
)
dev.off()
## change to red color panel
pdf("fig1-node.selection.pdf",useDingbats = T)
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(rexp(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.2]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## module by cell type
N=400;M=5;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat1=apply(mat,2,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1]=0
x[x>=1]=1
x
})
print (pheatmap::pheatmap(mat1,col=c('grey90',"#99000D"),
treeheight_row = 0, treeheight_col = 0)
)
dev.off()
## change to red color panel
pdf("fig1-node.selection.pdf",useDingbats = T)
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(rexp(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.4]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## module by cell type
N=400;M=5;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat1=apply(mat,2,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1]=0
x[x>=1]=1
x
})
print (pheatmap::pheatmap(mat1,col=c('grey90',"#99000D"),
treeheight_row = 0, treeheight_col = 0)
)
dev.off()
## change to red color panel
pdf("fig1-node.selection.pdf",useDingbats = T)
my.col=RColorBrewer::brewer.pal(7,'Reds')
#barplot(1:length(my.col),col=my.col)
my.col[1]='white'
N=20;M=4;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(rexp(N*M),N,M))
mat=mat/10
mat=t(mat)
mat1=t(apply(mat,1,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1.3]=0
x
}))
axis.tick=0:N
x=0:ncol(mat1)
y=0:nrow(mat1) #x and y should be 1 unit longer than dim(mat)
image(y,x,mat, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
image(y,x,mat1, axes=FALSE, col=my.col,ylab="", xlab="")
for(i in 1:length(axis.tick)){
segments(axis.tick[i],min(x),axis.tick[i],max(x))#vertical
#segments(min(x),axis.tick[i],max(x),axis.tick[i])#horizental
}
box()
## module by cell type
N=400;M=5;
set.seed(123456)
mat=as.matrix(Matrix::Matrix(runif(N*M),N,M))
mat1=apply(mat,2,function(i){
x=abs((i-mean(i))/sd(i))
x[x<1]=0
x[x>=1]=1
x
})
print (pheatmap::pheatmap(mat1,col=c('grey90',"#99000D"),
treeheight_row = 0, treeheight_col = 0)
)
dev.off()
